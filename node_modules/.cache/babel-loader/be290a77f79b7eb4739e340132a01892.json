{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\JetBrains\\\\IdeaProject\\\\jizhang\\\\src\\\\pages\\\\Graph\\\\Graph.js\";\nimport React from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { DatePicker } from 'antd-mobile';\nimport 'antd-mobile/dist/antd-mobile.css';\nimport { get } from \"../../utils/request\";\nimport history from \"../../utils/history\";\nimport \"./Graph.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Graph extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeType = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.changePeriod = e => {\n      let value = e.target.value;\n      let newDate = this.state.from === \"\" ? new Date() : new Date(this.state.from);\n\n      if (value === \"year\") {} else if (value === \"week\") {} else {\n        let nextMonth = newDate.getMonth() + 1;\n        let nextMonthFirstDay = new Date(newDate.getFullYear(), nextMonth, 1);\n        let oneDay = 1000 * 60 * 60 * 24;\n        let from = new Date(newDate.getFullYear(), newDate.getMonth(), 1);\n        let to = new Date(nextMonthFirstDay - oneDay); // this.setState({\n        //     from: from,\n        //     to: to\n        // })\n\n        console.log(from, to, newDate);\n      }\n    };\n\n    this.goLeft = () => {\n      let newDate = new Date(this.state.date);\n      let nextMonth = new Date(newDate.getFullYear(), newDate.getMonth() - 1, 1);\n      this.setState({\n        date: nextMonth\n      }, () => {\n        this.componentDidMount();\n      });\n    };\n\n    this.goRight = () => {\n      let newDate = new Date(this.state.date);\n      let nextMonth = new Date(newDate.getFullYear(), newDate.getMonth() + 1, 1);\n      this.setState({\n        date: nextMonth\n      }, () => {\n        this.componentDidMount();\n      });\n    };\n\n    this.state = {\n      type: \"1\",\n      date: new Date(),\n      from: \"\",\n      to: \"\",\n      graph: \"pie\",\n      period: \"month\"\n    };\n  }\n\n  componentDidMount() {\n    const data = {\n      account: this.props.account,\n      year: this.state.date.getFullYear(),\n      month: this.state.date.getMonth() + 1\n    };\n    console.log(data);\n    get('getGraphDate', data).then(res => {\n      this.setState({\n        sumIn: res.data.result.sumIn,\n        sumOut: res.data.result.sumOut,\n        outDetail: res.data.result.outDetail,\n        inDetail: res.data.result.inDetail,\n        inList: res.data.result.inList,\n        outList: res.data.result.outList\n      });\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  render() {\n    const list = this.state.outList === undefined ? [] : this.state.type === \"1\" ? this.state.outList : this.state.inList;\n    console.log(list);\n    const optionPie = {\n      tooltip: {\n        trigger: \"item\"\n      },\n      series: [{\n        name: this.state.type === \"1\" ? \"支出\" : \"收入\",\n        type: \"pie\",\n        radius: \"50%\",\n        data: this.state.type === \"1\" ? this.state.outDetail : this.state.inDetail\n      }]\n    };\n    const optionList = {\n      xAxis: {\n        type: 'category',\n        data: list.map(item => {\n          return item.date;\n        })\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        data: list.map(item => {\n          return item.amount;\n        }),\n        type: 'line'\n      }]\n    };\n\n    const showPeriod = () => {\n      if (this.state.period === \"week\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this);\n      } else if (this.state.period === \"year\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"11\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this);\n      } else {\n        let newDate = new Date(this.state.date);\n        let currentMonth = newDate.getMonth();\n        let nextMonth = ++currentMonth;\n        let nextMonthFirstDay = new Date(newDate.getFullYear(), nextMonth, 1);\n        let oneDay = 1000 * 60 * 60 * 24;\n        let lastTime = new Date(nextMonthFirstDay - oneDay);\n        let year = lastTime.getFullYear();\n        let month = lastTime.getMonth() + 1;\n        let day = lastTime.getDate();\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-head-period\",\n          children: [year === new Date().getFullYear() ? \"本年 \" : year + \".\", month, \".1~\", month, \".\", day]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u56FE\\u8868\\u5206\\u6790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-head-item\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            className: \"select-item graph-select\",\n            onChange: this.changeType,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"\\u652F\\u51FA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"\\u6536\\u5165\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-head-date graph-head-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"svg-btn\",\n              onClick: this.goLeft,\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"icon svg-left\",\n                \"aria-hidden\": \"true\",\n                children: /*#__PURE__*/_jsxDEV(\"use\", {\n                  xlinkHref: \"#icon-left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"graph-head-period\",\n            children: [this.state.from, \"~\", this.state.to]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"svg-btn\",\n              onClick: this.goRight,\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"icon svg-right\",\n                \"aria-hidden\": \"true\",\n                children: /*#__PURE__*/_jsxDEV(\"use\", {\n                  xlinkHref: \"#icon-right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-head-item\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"period\",\n            className: \"select-item graph-select\",\n            onChange: this.changePeriod,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"month\",\n              children: \"\\u6708\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"year\",\n              children: \"\\u5E74\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"week\",\n              children: \"\\u5468\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-head-item\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"graph\",\n            className: \"select-item graph-select\",\n            onChange: this.changeType,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pie\",\n              children: \"\\u997C\\u56FE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"line\",\n              children: \"\\u6298\\u7EBF\\u56FE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u603B\\u8BA1\", this.state.type === \"1\" ? this.state.sumOut : this.state.sumIn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactECharts, {\n        option: this.state.graph === \"pie\" ? optionPie : optionList,\n        notMerge: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Program Files/JetBrains/IdeaProject/jizhang/src/pages/Graph/Graph.js"],"names":["React","ReactECharts","DatePicker","get","history","Graph","Component","constructor","props","changeType","e","setState","target","name","value","changePeriod","newDate","state","from","Date","nextMonth","getMonth","nextMonthFirstDay","getFullYear","oneDay","to","console","log","goLeft","date","componentDidMount","goRight","type","graph","period","data","account","year","month","then","res","sumIn","result","sumOut","outDetail","inDetail","inList","outList","catch","err","alert","render","list","undefined","optionPie","tooltip","trigger","series","radius","optionList","xAxis","map","item","yAxis","amount","showPeriod","currentMonth","lastTime","day","getDate"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactECharts from 'echarts-for-react';\r\nimport {DatePicker} from 'antd-mobile';\r\nimport 'antd-mobile/dist/antd-mobile.css';\r\nimport {get} from \"../../utils/request\";\r\nimport history from \"../../utils/history\";\r\nimport \"./Graph.css\"\r\n\r\nexport default class Graph extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type: \"1\",\r\n            date: new Date(),\r\n            from: \"\",\r\n            to: \"\",\r\n            graph: \"pie\",\r\n            period: \"month\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const data = {\r\n            account: this.props.account,\r\n            year: this.state.date.getFullYear(),\r\n            month: this.state.date.getMonth() + 1,\r\n        }\r\n        console.log(data);\r\n        get('getGraphDate', data).then((res) => {\r\n            this.setState({\r\n                sumIn: res.data.result.sumIn,\r\n                sumOut: res.data.result.sumOut,\r\n                outDetail: res.data.result.outDetail,\r\n                inDetail: res.data.result.inDetail,\r\n                inList: res.data.result.inList,\r\n                outList: res.data.result.outList,\r\n            })\r\n        }).catch((err) => {\r\n            alert(err);\r\n        })\r\n    }\r\n\r\n    changeType = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    changePeriod = (e) => {\r\n        let value = e.target.value;\r\n        let newDate = this.state.from === \"\" ? new Date() : new Date(this.state.from);\r\n        if(value === \"year\"){\r\n\r\n        }else if(value === \"week\"){\r\n\r\n        }else{\r\n            let nextMonth = newDate.getMonth() + 1;\r\n            let nextMonthFirstDay = new Date(newDate.getFullYear(), nextMonth, 1);\r\n            let oneDay = 1000 * 60 * 60 * 24;\r\n            let from = new Date(newDate.getFullYear(), newDate.getMonth(), 1);\r\n            let to = new Date(nextMonthFirstDay - oneDay);\r\n            // this.setState({\r\n            //     from: from,\r\n            //     to: to\r\n            // })\r\n            console.log(from, to, newDate);\r\n\r\n\r\n        }\r\n    }\r\n    goLeft = () => {\r\n        let newDate = new Date(this.state.date);\r\n        let nextMonth = new Date(newDate.getFullYear(), newDate.getMonth() - 1, 1);\r\n        this.setState({date: nextMonth}, () => {this.componentDidMount()});\r\n    }\r\n    goRight = () => {\r\n        let newDate = new Date(this.state.date);\r\n        let nextMonth = new Date(newDate.getFullYear(), newDate.getMonth() + 1, 1);\r\n        this.setState({date: nextMonth}, () => {this.componentDidMount()});\r\n    }\r\n\r\n    render() {\r\n        const list = this.state.outList === undefined ? [] : (this.state.type === \"1\" ? this.state.outList : this.state.inList);\r\n        console.log(list);\r\n        const optionPie = {\r\n            tooltip: {\r\n                trigger: \"item\"\r\n            },\r\n            series: [\r\n                {\r\n                    name: this.state.type === \"1\" ? \"支出\" : \"收入\",\r\n                    type: \"pie\",\r\n                    radius: \"50%\",\r\n                    data: this.state.type === \"1\" ? this.state.outDetail : this.state.inDetail\r\n                }\r\n            ]\r\n        };\r\n        const optionList = {\r\n            xAxis: {\r\n                type: 'category',\r\n                data: list.map((item) => {\r\n                    return item.date;\r\n                })\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [{\r\n                data: list.map((item) => {\r\n                    return item.amount;\r\n                }),\r\n                type: 'line'\r\n            }]\r\n        };\r\n        const showPeriod = () => {\r\n            if (this.state.period === \"week\") {\r\n                return (\r\n                    <div>\r\n                        22\r\n                    </div>\r\n                );\r\n            } else if (this.state.period === \"year\") {\r\n                return (\r\n                    <div>\r\n                        11\r\n                    </div>\r\n                );\r\n            } else {\r\n                let newDate = new Date(this.state.date);\r\n                let currentMonth = newDate.getMonth();\r\n                let nextMonth = ++currentMonth;\r\n                let nextMonthFirstDay = new Date(newDate.getFullYear(), nextMonth, 1);\r\n                let oneDay = 1000 * 60 * 60 * 24;\r\n                let lastTime = new Date(nextMonthFirstDay - oneDay);\r\n                let year = lastTime.getFullYear();\r\n                let month = lastTime.getMonth() + 1;\r\n                let day = lastTime.getDate();\r\n                return (\r\n                    <div className=\"graph-head-period\">{year === new Date().getFullYear() ? \"本年 \" : year + \".\"}{month}.1~{month}.{day}</div>\r\n                );\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"graph-container\">\r\n                <div className=\"title\">\r\n                    <p>图表分析</p>\r\n                </div>\r\n                <div className=\"graph-head\">\r\n                    <div className=\"graph-head-item\">\r\n                        <select name=\"type\" className=\"select-item graph-select\" onChange={this.changeType}>\r\n                            <option value=\"1\">支出</option>\r\n                            <option value=\"0\">收入</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"graph-head-date graph-head-item\">\r\n                        <div>\r\n                            <button className=\"svg-btn\" onClick={this.goLeft}>\r\n                                <svg className=\"icon svg-left\" aria-hidden=\"true\">\r\n                                    <use xlinkHref=\"#icon-left\"/>\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"graph-head-period\">{this.state.from}~{this.state.to}</div>\r\n                        {/*{showPeriod()}*/}\r\n                        <div>\r\n                            <button className=\"svg-btn\" onClick={this.goRight}>\r\n                                <svg className=\"icon svg-right\" aria-hidden=\"true\">\r\n                                    <use xlinkHref=\"#icon-right\"/>\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"graph-head-item\">\r\n                        <select name=\"period\" className=\"select-item graph-select\" onChange={this.changePeriod}>\r\n                            <option value=\"month\">月</option>\r\n                            <option value=\"year\">年</option>\r\n                            <option value=\"week\">周</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"graph-head-item\">\r\n                        <select name=\"graph\" className=\"select-item graph-select\" onChange={this.changeType}>\r\n                            <option value=\"pie\">饼图</option>\r\n                            <option value=\"line\">折线图</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>总计{this.state.type === \"1\" ? this.state.sumOut : this.state.sumIn}</div>\r\n                <ReactECharts option={this.state.graph === \"pie\" ? optionPie : optionList} notMerge={true}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}