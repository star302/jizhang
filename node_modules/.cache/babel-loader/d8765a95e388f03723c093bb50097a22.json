{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\JetBrains\\\\IdeaProject\\\\jizhang\\\\src\\\\pages\\\\Graph\\\\Graph.js\";\nimport React from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { DatePicker } from 'antd-mobile';\nimport 'antd-mobile/dist/antd-mobile.css';\nimport { get } from \"../../utils/request\";\nimport history from \"../../utils/history\";\nimport \"./Graph.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Graph extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = () => {\n      const data = {\n        account: this.props.account,\n        period: this.state.period,\n        from: this.state.begin,\n        to: this.state.end\n      };\n      console.log(data);\n      get('getGraphDate', data).then(res => {\n        this.setState({\n          sumIn: res.data.result.sumIn,\n          sumOut: res.data.result.sumOut,\n          outDetail: res.data.result.outDetail,\n          inDetail: res.data.result.inDetail,\n          inList: res.data.result.inList,\n          outList: res.data.result.outList\n        });\n      }).catch(err => {\n        alert(err);\n      });\n    };\n\n    this.changeType = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.setMonth = () => {\n      let newDate = new Date();\n      let nextMonth = newDate.getMonth() + 1;\n      let nextMonthFirstDay = new Date(newDate.getFullYear(), nextMonth, 1);\n      let oneDay = 1000 * 60 * 60 * 24;\n      let from = new Date(newDate.getFullYear(), newDate.getMonth(), 1);\n      let to = new Date(nextMonthFirstDay - oneDay);\n      this.setState({\n        year: newDate.getFullYear(),\n        month: newDate.getMonth(),\n        day: newDate.getDate(),\n        begin: from,\n        end: to,\n        from: from.format(\"yyyy.M.d\"),\n        to: to.format(\"M.d\")\n      }, () => {\n        this.getData();\n      });\n    };\n\n    this.setYear = () => {\n      let newDate = new Date();\n      let nextYearFirstDay = new Date(newDate.getFullYear() + 1, 0, 1);\n      let from = new Date(newDate.getFullYear(), 0, 1);\n      let to = new Date(nextYearFirstDay - 1000 * 60 * 60 * 24);\n      this.setState({\n        year: from.getFullYear(),\n        begin: from,\n        end: to,\n        from: from.format(\"yyyy.M.d\"),\n        to: to.format(\"M.d\")\n      }, () => {\n        this.getData();\n      });\n    };\n\n    this.setWeek = () => {\n      let newDate = new Date();\n      let newTime = newDate.getTime();\n      let day = newDate.getDay();\n      let oneDay = 1000 * 60 * 60 * 24;\n      let monday = newTime - (day - 1) * oneDay;\n      let sunday = newTime + (7 - day) * oneDay;\n      let from = new Date(monday);\n      let to = new Date(sunday);\n      this.setState({\n        year: newDate.getFullYear(),\n        month: newDate.getMonth(),\n        day: newDate.getDate(),\n        begin: from,\n        end: to,\n        from: from.format(\"yyyy.M.d\"),\n        to: to.format(\"M.d\")\n      }, () => {\n        this.getData();\n      });\n    };\n\n    this.changePeriod = e => {\n      let value = e.target.value;\n\n      if (value === \"year\") {\n        this.setYear();\n      } else if (value === \"week\") {\n        this.setWeek();\n      } else {\n        this.setMonth();\n      }\n\n      this.setState({\n        [e.target.name]: value\n      });\n    };\n\n    this.goLeft = () => {\n      let from, nextFirst, to;\n\n      if (this.state.period === \"year\") {\n        from = new Date(this.state.year - 1, 0, 1);\n        nextFirst = new Date(this.state.year, 0, 1);\n        to = new Date(nextFirst - 1000 * 60 * 60 * 24);\n      } else if (this.state.period === \"week\") {\n        from = new Date(this.state.year, this.state.month, this.state.day - 7);\n        to = new Date(this.state.year, this.state.month, this.state.day - 1);\n      } else {\n        from = new Date(this.state.year, this.state.month - 1, 1);\n        nextFirst = new Date(this.state.year, this.state.month, 1);\n        to = new Date(nextFirst - 1000 * 60 * 60 * 24);\n      }\n\n      this.setState({\n        year: from.getFullYear(),\n        month: from.getMonth(),\n        day: from.getDate(),\n        begin: from,\n        end: to,\n        from: from.format(\"yyyy.M.d\"),\n        to: to.format(\"M.d\")\n      });\n      console.log(from, to, this.state);\n    };\n\n    this.goRight = () => {\n      let from, nextFirst, to;\n\n      if (this.state.period === \"year\") {\n        from = new Date(this.state.year + 1, 0, 1);\n        nextFirst = new Date(this.state.year + 2, 0, 1);\n        to = new Date(nextFirst - 1000 * 60 * 60 * 24);\n      } else if (this.state.period === \"week\") {\n        from = new Date(this.state.year, this.state.month, this.state.day + 7);\n        to = new Date(this.state.year, this.state.month, this.state.day + 13);\n      } else {\n        from = new Date(this.state.year, this.state.month + 1, 1);\n        nextFirst = new Date(this.state.year, this.state.month + 2, 1);\n        to = new Date(nextFirst - 1000 * 60 * 60 * 24);\n      }\n\n      this.setState({\n        year: from.getFullYear(),\n        month: from.getMonth(),\n        day: from.getDate(),\n        begin: from,\n        end: to,\n        from: from.format(\"yyyy.M.d\"),\n        to: to.format(\"M.d\")\n      });\n      console.log(from, to, this.state);\n    };\n\n    this.state = {\n      type: \"1\",\n      date: new Date(),\n      graph: \"pie\",\n      period: \"month\"\n    };\n  }\n\n  componentDidMount() {\n    this.setMonth();\n  }\n\n  render() {\n    const list = this.state.outList === undefined ? [] : this.state.type === \"1\" ? this.state.outList : this.state.inList;\n    console.log(list);\n    const optionPie = {\n      tooltip: {\n        trigger: \"item\"\n      },\n      series: [{\n        name: this.state.type === \"1\" ? \"支出\" : \"收入\",\n        type: \"pie\",\n        radius: \"50%\",\n        data: this.state.type === \"1\" ? this.state.outDetail : this.state.inDetail\n      }]\n    };\n    const optionList = {\n      xAxis: {\n        type: 'category',\n        data: list.map(item => {\n          return item.date;\n        })\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        data: list.map(item => {\n          return item.amount;\n        }),\n        type: 'line'\n      }]\n    };\n\n    const showPeriod = () => {\n      if (this.state.period === \"week\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this);\n      } else if (this.state.period === \"year\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"11\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this);\n      } else {\n        let newDate = new Date(this.state.date);\n        let currentMonth = newDate.getMonth();\n        let nextMonth = ++currentMonth;\n        let nextMonthFirstDay = new Date(newDate.getFullYear(), nextMonth, 1);\n        let oneDay = 1000 * 60 * 60 * 24;\n        let lastTime = new Date(nextMonthFirstDay - oneDay);\n        let year = lastTime.getFullYear();\n        let month = lastTime.getMonth() + 1;\n        let day = lastTime.getDate();\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-head-period\",\n          children: [year === new Date().getFullYear() ? \"本年 \" : year + \".\", month, \".1~\", month, \".\", day]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u56FE\\u8868\\u5206\\u6790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-head-item\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            className: \"select-item graph-select\",\n            onChange: this.changeType,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"\\u652F\\u51FA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"\\u6536\\u5165\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-head-date graph-head-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"svg-btn\",\n              onClick: this.goLeft,\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"icon svg-left\",\n                \"aria-hidden\": \"true\",\n                children: /*#__PURE__*/_jsxDEV(\"use\", {\n                  xlinkHref: \"#icon-left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"graph-head-period\",\n            children: [this.state.from, \"~\", this.state.to]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"svg-btn\",\n              onClick: this.goRight,\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"icon svg-right\",\n                \"aria-hidden\": \"true\",\n                children: /*#__PURE__*/_jsxDEV(\"use\", {\n                  xlinkHref: \"#icon-right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-head-item\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"period\",\n            className: \"select-item graph-select\",\n            onChange: this.changePeriod,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"month\",\n              children: \"\\u6708\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"year\",\n              children: \"\\u5E74\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"week\",\n              children: \"\\u5468\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-head-item\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"graph\",\n            className: \"select-item graph-select\",\n            onChange: this.changeType,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pie\",\n              children: \"\\u997C\\u56FE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"line\",\n              children: \"\\u6298\\u7EBF\\u56FE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u603B\\u8BA1\", this.state.type === \"1\" ? this.state.sumOut : this.state.sumIn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactECharts, {\n        option: this.state.graph === \"pie\" ? optionPie : optionList,\n        notMerge: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Program Files/JetBrains/IdeaProject/jizhang/src/pages/Graph/Graph.js"],"names":["React","ReactECharts","DatePicker","get","history","Graph","Component","constructor","props","getData","data","account","period","state","from","begin","to","end","console","log","then","res","setState","sumIn","result","sumOut","outDetail","inDetail","inList","outList","catch","err","alert","changeType","e","target","name","value","setMonth","newDate","Date","nextMonth","getMonth","nextMonthFirstDay","getFullYear","oneDay","year","month","day","getDate","format","setYear","nextYearFirstDay","setWeek","newTime","getTime","getDay","monday","sunday","changePeriod","goLeft","nextFirst","goRight","type","date","graph","componentDidMount","render","list","undefined","optionPie","tooltip","trigger","series","radius","optionList","xAxis","map","item","yAxis","amount","showPeriod","currentMonth","lastTime"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactECharts from 'echarts-for-react';\r\nimport {DatePicker} from 'antd-mobile';\r\nimport 'antd-mobile/dist/antd-mobile.css';\r\nimport {get} from \"../../utils/request\";\r\nimport history from \"../../utils/history\";\r\nimport \"./Graph.css\"\r\n\r\nexport default class Graph extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type: \"1\",\r\n            date: new Date(),\r\n            graph: \"pie\",\r\n            period: \"month\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setMonth();\r\n    }\r\n    getData = () => {\r\n        const data = {\r\n            account: this.props.account,\r\n            period: this.state.period,\r\n            from: this.state.begin,\r\n            to: this.state.end,\r\n        }\r\n        console.log(data);\r\n        get('getGraphDate', data).then((res) => {\r\n            this.setState({\r\n                sumIn: res.data.result.sumIn,\r\n                sumOut: res.data.result.sumOut,\r\n                outDetail: res.data.result.outDetail,\r\n                inDetail: res.data.result.inDetail,\r\n                inList: res.data.result.inList,\r\n                outList: res.data.result.outList,\r\n            })\r\n        }).catch((err) => {\r\n            alert(err);\r\n        })\r\n    }\r\n    changeType = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    setMonth = () => {\r\n        let newDate = new Date();\r\n        let nextMonth = newDate.getMonth() + 1;\r\n        let nextMonthFirstDay = new Date(newDate.getFullYear(), nextMonth, 1);\r\n        let oneDay = 1000 * 60 * 60 * 24;\r\n        let from = new Date(newDate.getFullYear(), newDate.getMonth(), 1);\r\n        let to = new Date(nextMonthFirstDay - oneDay);\r\n        this.setState({\r\n            year: newDate.getFullYear(),\r\n            month: newDate.getMonth(),\r\n            day: newDate.getDate(),\r\n            begin: from,\r\n            end: to,\r\n            from: from.format(\"yyyy.M.d\"),\r\n            to: to.format(\"M.d\")\r\n        }, () => {this.getData()});\r\n    }\r\n    setYear = () => {\r\n        let newDate = new Date();\r\n        let nextYearFirstDay = new Date(newDate.getFullYear() + 1, 0, 1);\r\n        let from = new Date(newDate.getFullYear(), 0, 1);\r\n        let to = new Date(nextYearFirstDay - 1000 * 60 * 60 * 24);\r\n        this.setState({\r\n            year: from.getFullYear(),\r\n            begin: from,\r\n            end: to,\r\n            from: from.format(\"yyyy.M.d\"),\r\n            to: to.format(\"M.d\")\r\n        }, () => {this.getData()})\r\n    }\r\n    setWeek = () => {\r\n        let newDate = new Date();\r\n        let newTime = newDate.getTime();\r\n        let day = newDate.getDay();\r\n        let oneDay = 1000 * 60 * 60 * 24;\r\n        let monday = newTime - (day - 1) * oneDay;\r\n        let sunday = newTime + (7 - day) * oneDay;\r\n        let from = new Date(monday);\r\n        let to = new Date(sunday);\r\n        this.setState({\r\n            year: newDate.getFullYear(),\r\n            month: newDate.getMonth(),\r\n            day: newDate.getDate(),\r\n            begin: from,\r\n            end: to,\r\n            from: from.format(\"yyyy.M.d\"),\r\n            to: to.format(\"M.d\")\r\n        }, () => {this.getData()});\r\n    }\r\n    changePeriod = (e) => {\r\n        let value = e.target.value;\r\n        if(value === \"year\"){\r\n            this.setYear();\r\n        }else if(value === \"week\"){\r\n            this.setWeek();\r\n        }else{\r\n            this.setMonth();\r\n        }\r\n        this.setState({[e.target.name]: value});\r\n    }\r\n    goLeft = () => {\r\n        let from, nextFirst, to;\r\n        if(this.state.period === \"year\"){\r\n            from = new Date(this.state.year - 1, 0, 1);\r\n            nextFirst = new Date(this.state.year, 0, 1);\r\n            to = new Date(nextFirst - 1000 * 60 * 60 * 24);\r\n        }else if(this.state.period === \"week\"){\r\n            from = new Date(this.state.year, this.state.month, this.state.day - 7);\r\n            to = new Date(this.state.year, this.state.month, this.state.day - 1);\r\n        }else{\r\n            from = new Date(this.state.year, this.state.month - 1, 1);\r\n            nextFirst = new Date(this.state.year, this.state.month, 1);\r\n            to = new Date(nextFirst - 1000 * 60 * 60 * 24);\r\n        }\r\n        this.setState({\r\n            year: from.getFullYear(),\r\n            month: from.getMonth(),\r\n            day: from.getDate(),\r\n            begin: from,\r\n            end: to,\r\n            from: from.format(\"yyyy.M.d\"),\r\n            to: to.format(\"M.d\")\r\n        })\r\n        console.log(from, to, this.state)\r\n    }\r\n    goRight = () => {\r\n        let from, nextFirst, to;\r\n        if(this.state.period === \"year\"){\r\n            from = new Date(this.state.year + 1, 0, 1);\r\n            nextFirst = new Date(this.state.year + 2, 0, 1);\r\n            to = new Date(nextFirst - 1000 * 60 * 60 * 24);\r\n        }else if(this.state.period === \"week\"){\r\n            from = new Date(this.state.year, this.state.month, this.state.day + 7);\r\n            to = new Date(this.state.year, this.state.month, this.state.day + 13);\r\n        }else{\r\n            from = new Date(this.state.year, this.state.month + 1, 1);\r\n            nextFirst = new Date(this.state.year, this.state.month + 2, 1);\r\n            to = new Date(nextFirst - 1000 * 60 * 60 * 24);\r\n        }\r\n        this.setState({\r\n            year: from.getFullYear(),\r\n            month: from.getMonth(),\r\n            day: from.getDate(),\r\n            begin: from,\r\n            end: to,\r\n            from: from.format(\"yyyy.M.d\"),\r\n            to: to.format(\"M.d\")\r\n        })\r\n        console.log(from, to, this.state)\r\n    }\r\n\r\n    render() {\r\n        const list = this.state.outList === undefined ? [] : (this.state.type === \"1\" ? this.state.outList : this.state.inList);\r\n        console.log(list);\r\n        const optionPie = {\r\n            tooltip: {\r\n                trigger: \"item\"\r\n            },\r\n            series: [\r\n                {\r\n                    name: this.state.type === \"1\" ? \"支出\" : \"收入\",\r\n                    type: \"pie\",\r\n                    radius: \"50%\",\r\n                    data: this.state.type === \"1\" ? this.state.outDetail : this.state.inDetail\r\n                }\r\n            ]\r\n        };\r\n        const optionList = {\r\n            xAxis: {\r\n                type: 'category',\r\n                data: list.map((item) => {\r\n                    return item.date;\r\n                })\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [{\r\n                data: list.map((item) => {\r\n                    return item.amount;\r\n                }),\r\n                type: 'line'\r\n            }]\r\n        };\r\n        const showPeriod = () => {\r\n            if (this.state.period === \"week\") {\r\n                return (\r\n                    <div>\r\n                        22\r\n                    </div>\r\n                );\r\n            } else if (this.state.period === \"year\") {\r\n                return (\r\n                    <div>\r\n                        11\r\n                    </div>\r\n                );\r\n            } else {\r\n                let newDate = new Date(this.state.date);\r\n                let currentMonth = newDate.getMonth();\r\n                let nextMonth = ++currentMonth;\r\n                let nextMonthFirstDay = new Date(newDate.getFullYear(), nextMonth, 1);\r\n                let oneDay = 1000 * 60 * 60 * 24;\r\n                let lastTime = new Date(nextMonthFirstDay - oneDay);\r\n                let year = lastTime.getFullYear();\r\n                let month = lastTime.getMonth() + 1;\r\n                let day = lastTime.getDate();\r\n                return (\r\n                    <div className=\"graph-head-period\">{year === new Date().getFullYear() ? \"本年 \" : year + \".\"}{month}.1~{month}.{day}</div>\r\n                );\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"graph-container\">\r\n                <div className=\"title\">\r\n                    <p>图表分析</p>\r\n                </div>\r\n                <div className=\"graph-head\">\r\n                    <div className=\"graph-head-item\">\r\n                        <select name=\"type\" className=\"select-item graph-select\" onChange={this.changeType}>\r\n                            <option value=\"1\">支出</option>\r\n                            <option value=\"0\">收入</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"graph-head-date graph-head-item\">\r\n                        <div>\r\n                            <button className=\"svg-btn\" onClick={this.goLeft}>\r\n                                <svg className=\"icon svg-left\" aria-hidden=\"true\">\r\n                                    <use xlinkHref=\"#icon-left\"/>\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"graph-head-period\">{this.state.from}~{this.state.to}</div>\r\n                        {/*{showPeriod()}*/}\r\n                        <div>\r\n                            <button className=\"svg-btn\" onClick={this.goRight}>\r\n                                <svg className=\"icon svg-right\" aria-hidden=\"true\">\r\n                                    <use xlinkHref=\"#icon-right\"/>\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"graph-head-item\">\r\n                        <select name=\"period\" className=\"select-item graph-select\" onChange={this.changePeriod}>\r\n                            <option value=\"month\">月</option>\r\n                            <option value=\"year\">年</option>\r\n                            <option value=\"week\">周</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"graph-head-item\">\r\n                        <select name=\"graph\" className=\"select-item graph-select\" onChange={this.changeType}>\r\n                            <option value=\"pie\">饼图</option>\r\n                            <option value=\"line\">折线图</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>总计{this.state.type === \"1\" ? this.state.sumOut : this.state.sumIn}</div>\r\n                <ReactECharts option={this.state.graph === \"pie\" ? optionPie : optionList} notMerge={true}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}